#+title: Próba zrobienia zadania "optyka" z raylib w c99
#+author: Krzysztof M.
#+OPTIONS: tex:t

#+begin_src shell
  $ mypaint ./notatki.ora
  $ make
  $ ./main

  $ make build-windows
  $ wine ./main.exe
#+end_src

*** uwagi
- testowane na raylib 4.5. wyższe werje mogą nie działać bo coś tam odwalili z liczeniem wektorów lololol
- wzory są wyjęte z dupy, np

#+begin_src latex
H = wysokość okna \\

\operatorname{target}(a, b, k) = \begin{cases}
\begin{bmatrix}
  (x_{a} + ((x_{b} - x_{a}) * y_{a}) / (y_{a} - y_{b})) \\
  0
\end{bmatrix} & \text{ jeśli } -180 \le k \le 0
\\
\begin{bmatrix}
  x_{a} + ((x_{b} - x_{a}) * (H - y_{a})) / (y_{b} - y_{a}) \\
  H
\end{bmatrix} & \text{ w innych wypadkach }

\end{cases}
#+end_src


Piszę tą próbę w C, bo nie znalazłem żadnej dobrej biblioteki do pisania "gier" dla racketa.
Oczywiście jest wrapper dla raylib, ale dużo szybciej dla mnie jest napisać to najpierw w
C + raylib a potem dopiero (jeśli w ogóle) próbować przeportować to do racketowego wrappera
dla raylib.

Jest to bardzo nieokiełznany *proof-of-concept*, który musi zostać opatrzony w wiele wiecej
struktur itp itd, żeby przypominał jakkolwiek to, o co prosi zadanie. Ma na celu sprawdzenie jak
wyglądałoby pisanie tego w C + raylib.

[[https://science-cup.pl/wp-content/uploads/2023/11/MSC4_2023_Optyka.pdf][zadanie]]
